Beginning AutoGluon training... Time limit = 3000s
AutoGluon will save models to 'c:\Users\Georgi\test_gluon\AutogluonModels\ag_custom'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.9.10
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.19045
CPU Count:          8
GPU Count:          0
Memory Avail:       3.62 GB / 15.75 GB (23.0%)
Disk Space Avail:   86.27 GB / 237.84 GB (36.3%)
===================================================

Fitting with arguments:
{'enable_ensemble': False,
 'eval_metric': WQL,
 'freq': '15min',
 'hyperparameters': {'DeepAR': {'batch_size': 32,
                                'early_stop_patience': 5,
                                'epochs': 2,
                                'learning_rate': 0.001,
                                'verbose': 1}},
 'known_covariates_names': ['temperature_2m',
                            'cloud_cover',
                            'cloud_cover_low',
                            'wind_speed_10m',
                            'direct_radiation',
                            'diffuse_radiation',
                            'global_tilted_irradiance'],
 'num_val_windows': 1,
 'prediction_length': 288,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'production',
 'time_limit': 3000,
 'verbosity': 3}

Provided train_data has 2976 rows, 1 time series. Median time series length is 2976 (min=2976, max=2976). 

Provided data contains following columns:
	target: 'production'
	known_covariates:
		categorical:        []
		continuous (float): ['temperature_2m', 'cloud_cover', 'cloud_cover_low', 'wind_speed_10m', 'direct_radiation', 'diffuse_radiation', ...]

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'WQL'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-02-24 09:56:23
Models that will be trained: ['DeepAR']
Training timeseries model DeepAR. Training for up to 3000.0s of the 3000.0s of remaining time.
	Time limit adjusted due to model hyperparameters: 2999.90s -> 2699.91s (ag.max_time_limit=None, ag.max_time_limit_ratio=0.9, ag.min_time_limit=0)
