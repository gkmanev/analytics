version: '3.8'

services:
  web:
    build:
      context: ./
      dockerfile: Dockerfile
    command: gunicorn ml_project.wsgi:application --bind 0.0.0.0:8000
    ports:
      - '8000:8000'
    environment:
      - POSTGRES_DB=postgres_latest
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - DEBUG=1
      - SECRET_KEY=foo
      - DJANGO_ALLOWED_HOSTS=localhost,127.0.0.1,192.168.1.32,85.14.6.37,[::1]
    depends_on:
      - redis
      - db
    volumes:
      - .:/app           # was .:/code; /app matches your Dockerfile WORKDIR
    restart: always

  db:
    image: postgres:16
    volumes:
      - postgres_data_new:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres_latest
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    restart: always

  redis:
    image: redis:6-alpine
    restart: always

  celery_worker:
    build:
      context: ./
    command: celery -A ml_project worker -l info
    environment:
      - POSTGRES_DB=postgres_latest
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - DEBUG=1
      - SECRET_KEY=foo
      - DJANGO_ALLOWED_HOSTS=localhost,127.0.0.1,85.14.6.37,192.168.1.32,[::1]   # fixed comma
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility
    depends_on:
      - redis
      - db
    restart: always
    gpus: all

  celery_beat:
    build:
      context: ./
    command: celery -A ml_project beat -l info
    environment:
      - POSTGRES_DB=postgres_latest
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - DEBUG=1
      - SECRET_KEY=foo
      - DJANGO_ALLOWED_HOSTS=localhost,127.0.0.1,85.14.6.37,192.168.1.32,[::1]   # fixed comma
    depends_on:
      - redis
    restart: always

volumes:
  postgres_data_new:
